generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id          String      @id @default(auto()) @map("_id") @db.ObjectId
  uid         String      @unique
  email       String?
  session     String      @unique
  phone       String?
  photo       String?
  name        String?
  title       String?
  description String?
  githubUrl   String?
  youtubeUrl  String?
  linkedInUrl String?
  websiteUrl  String?
  Portfolio   Portfolio[]
  Project     Project[]

  @@map("users")
}

type PortfolioUser {
  email       String?
  phone       String?
  photo       String?
  name        String?
  title       String?
  description String?
  githubUrl   String?
  youtubeUrl  String?
  linkedInUrl String?
  websiteUrl  String?
}

model Portfolio {
  id          String        @id @default(auto()) @map("_id") @db.ObjectId
  author      User          @relation(fields: [authorId], references: [id])
  authorId    String        @db.ObjectId
  user        PortfolioUser
  name        String?
  achivements Achivement[]
  projectIds  String[]
  theme       String?       @default("default")
  updatedAt   DateTime      @default(now())

  @@map("portfolios")
}

model Project {
  id          String           @id @default(auto()) @map("_id") @db.ObjectId
  author      User             @relation(fields: [authorId], references: [id])
  authorId    String           @db.ObjectId
  name        String
  description String?
  photos      String[]
  contents    ContentSection[]
  demoUrl     String?
  repoUrls    RepoUrl[]
  memberNum   Int?
  startDate   DateTime?
  endDate     DateTime?
  tasks       Task[]
  skills      String[]
  features    Feature[]
  updatedAt   DateTime         @default(now())

  @@map("projects")
}

type Work {
  startDate DateTime
  endDate   DateTime?
  company   String
  title     String
  contents  ContentSection[]
}

type Education {
  startDate DateTime
  endDate   DateTime?
  school    String
  major     String?
  gpa       Float?
  contents  ContentSection[]
}

type ContentSection {
  order       Int
  title       String
  description String
  content     String[]
}

type Task {
  content String
  skills  String[]
}

type Achivement {
  startDate   DateTime
  endDate     DateTime?
  title       String
  description String?
  photo       String?
  url         String?
}

type RepoUrl {
  name        String?
  description String?
  url         String
}

type Feature {
  title       String?
  description String?
  photos      String[]
  demoUrl     String
  order       Int      @default(0)
}
